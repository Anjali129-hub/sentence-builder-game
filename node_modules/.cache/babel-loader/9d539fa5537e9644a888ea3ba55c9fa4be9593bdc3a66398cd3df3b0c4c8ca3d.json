{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchQuestions } from './api'; // Make sure api.js is in the correct path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [userAnswers, setUserAnswers] = useState([]);\n\n  // Fetch questions when the component mounts\n  useEffect(() => {\n    const getQuestions = async () => {\n      const fetchedQuestions = await fetchQuestions();\n      setQuestions(fetchedQuestions);\n      setCurrentQuestion(fetchedQuestions[0]); // Set the first question\n    };\n    getQuestions();\n  }, []);\n\n  // Handle answer selection\n  const handleAnswerChange = (index, answer) => {\n    const updatedAnswers = [...userAnswers];\n    updatedAnswers[index] = answer;\n    setUserAnswers(updatedAnswers);\n  };\n\n  // Render blanks in the question\n  const renderBlanks = () => {\n    if (!currentQuestion) return null;\n    const {\n      question,\n      options\n    } = currentQuestion;\n    const blanks = question.split('___________'); // Split by blanks\n\n    return blanks.map((part, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [part, index < blanks.length - 1 && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: userAnswers[index] || '',\n        onChange: e => handleAnswerChange(index, e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), options.map((option, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fill in the Blanks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: renderBlanks()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert('Submit functionality not implemented yet!'),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), !currentQuestion && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oTJo4oOyxjhV/7p3ZfRkBQucdPY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchQuestions","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","userAnswers","setUserAnswers","getQuestions","fetchedQuestions","handleAnswerChange","index","answer","updatedAnswers","renderBlanks","question","options","blanks","split","map","part","children","length","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","option","i","className","onClick","alert","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchQuestions } from './api';  // Make sure api.js is in the correct path\r\n\r\nconst App = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(null);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n\r\n  // Fetch questions when the component mounts\r\n  useEffect(() => {\r\n    const getQuestions = async () => {\r\n      const fetchedQuestions = await fetchQuestions();\r\n      setQuestions(fetchedQuestions);\r\n      setCurrentQuestion(fetchedQuestions[0]);  // Set the first question\r\n    };\r\n    \r\n    getQuestions();\r\n  }, []);\r\n\r\n  // Handle answer selection\r\n  const handleAnswerChange = (index, answer) => {\r\n    const updatedAnswers = [...userAnswers];\r\n    updatedAnswers[index] = answer;\r\n    setUserAnswers(updatedAnswers);\r\n  };\r\n\r\n  // Render blanks in the question\r\n  const renderBlanks = () => {\r\n    if (!currentQuestion) return null;\r\n\r\n    const { question, options } = currentQuestion;\r\n    const blanks = question.split('___________');  // Split by blanks\r\n\r\n    return blanks.map((part, index) => (\r\n      <span key={index}>\r\n        {part}\r\n        {index < blanks.length - 1 && (\r\n          <select\r\n            value={userAnswers[index] || ''}\r\n            onChange={(e) => handleAnswerChange(index, e.target.value)}\r\n          >\r\n            <option value=\"\">Select answer</option>\r\n            {options.map((option, i) => (\r\n              <option key={i} value={option}>\r\n                {option}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        )}\r\n      </span>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Fill in the Blanks</h1>\r\n      {currentQuestion && (\r\n        <div>\r\n          <p>{renderBlanks()}</p>\r\n          <button onClick={() => alert('Submit functionality not implemented yet!')}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n      {!currentQuestion && <p>Loading questions...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,OAAO,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,gBAAgB,GAAG,MAAMZ,cAAc,CAAC,CAAC;MAC/CM,YAAY,CAACM,gBAAgB,CAAC;MAC9BJ,kBAAkB,CAACI,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;IAC5C,CAAC;IAEDD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC5C,MAAMC,cAAc,GAAG,CAAC,GAAGP,WAAW,CAAC;IACvCO,cAAc,CAACF,KAAK,CAAC,GAAGC,MAAM;IAC9BL,cAAc,CAACM,cAAc,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACV,eAAe,EAAE,OAAO,IAAI;IAEjC,MAAM;MAAEW,QAAQ;MAAEC;IAAQ,CAAC,GAAGZ,eAAe;IAC7C,MAAMa,MAAM,GAAGF,QAAQ,CAACG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAE;;IAE/C,OAAOD,MAAM,CAACE,GAAG,CAAC,CAACC,IAAI,EAAET,KAAK,kBAC5BZ,OAAA;MAAAsB,QAAA,GACGD,IAAI,EACJT,KAAK,GAAGM,MAAM,CAACK,MAAM,GAAG,CAAC,iBACxBvB,OAAA;QACEwB,KAAK,EAAEjB,WAAW,CAACK,KAAK,CAAC,IAAI,EAAG;QAChCa,QAAQ,EAAGC,CAAC,IAAKf,kBAAkB,CAACC,KAAK,EAAEc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAF,QAAA,gBAE3DtB,OAAA;UAAQwB,KAAK,EAAC,EAAE;UAAAF,QAAA,EAAC;QAAa;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACtCd,OAAO,CAACG,GAAG,CAAC,CAACY,MAAM,EAAEC,CAAC,kBACrBjC,OAAA;UAAgBwB,KAAK,EAAEQ,MAAO;UAAAV,QAAA,EAC3BU;QAAM,GADIC,CAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CACT;IAAA,GAdQnB,KAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeV,CACP,CAAC;EACJ,CAAC;EAED,oBACE/B,OAAA;IAAKkC,SAAS,EAAC,KAAK;IAAAZ,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,EAAI;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1B1B,eAAe,iBACdL,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAIP,YAAY,CAAC;MAAC;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB/B,OAAA;QAAQmC,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,2CAA2C,CAAE;QAAAd,QAAA,EAAC;MAE3E;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EACA,CAAC1B,eAAe,iBAAIL,OAAA;MAAAsB,QAAA,EAAG;IAAoB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAhEID,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAkET,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}