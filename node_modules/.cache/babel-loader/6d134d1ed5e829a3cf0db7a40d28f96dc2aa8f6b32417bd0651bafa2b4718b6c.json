{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\components\\\\QuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionCard({\n  question,\n  onAnswer\n}) {\n  _s();\n  const {\n    questionId,\n    question: questionText,\n    options,\n    correctAnswer\n  } = question;\n  const [selectedAnswers, setSelectedAnswers] = useState(new Array(correctAnswer.length).fill(null));\n  const [isAnswered, setIsAnswered] = useState(false);\n  const handleOptionClick = (word, index) => {\n    const updatedAnswers = [...selectedAnswers];\n    updatedAnswers[index] = word;\n    setSelectedAnswers(updatedAnswers);\n  };\n  const handleCheckAnswers = () => {\n    const isCorrect = selectedAnswers.every((ans, index) => ans === correctAnswer[index]);\n    setIsAnswered(true);\n    onAnswer(isCorrect); // Notify parent of the result\n  };\n  const displaySentence = () => {\n    let sentenceParts = questionText.split(\"_____________\");\n    let result = [];\n    for (let i = 0; i < sentenceParts.length; i++) {\n      result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        children: sentenceParts[i]\n      }, `text-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this));\n      if (i < correctAnswer.length) {\n        const answer = selectedAnswers[i];\n        result.push(/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"inline-block bg-yellow-200 border px-2 py-1 mx-1 rounded cursor-pointer\",\n          onClick: () => handleOptionClick(options[i], i),\n          children: answer || \"____\"\n        }, `blank-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return result;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: displaySentence()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2 mb-4\",\n      children: options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionClick(option, selectedAnswers.indexOf(null)),\n        className: `px-3 py-1 rounded border ${selectedAnswers.includes(option) ? 'bg-green-300' : 'bg-gray-200'}`,\n        children: option\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), !isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCheckAnswers,\n      className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n      children: \"Check Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionCard, \"aa5Deym6ND95AZ9Ljx+d6WlBC8A=\");\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionCard","question","onAnswer","_s","questionId","questionText","options","correctAnswer","selectedAnswers","setSelectedAnswers","Array","length","fill","isAnswered","setIsAnswered","handleOptionClick","word","index","updatedAnswers","handleCheckAnswers","isCorrect","every","ans","displaySentence","sentenceParts","split","result","i","push","children","fileName","_jsxFileName","lineNumber","columnNumber","answer","className","onClick","map","option","idx","indexOf","includes","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/components/QuestionCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction QuestionCard({ question, onAnswer }) {\r\n  const { questionId, question: questionText, options, correctAnswer } = question;\r\n  const [selectedAnswers, setSelectedAnswers] = useState(new Array(correctAnswer.length).fill(null));\r\n  const [isAnswered, setIsAnswered] = useState(false);\r\n\r\n  const handleOptionClick = (word, index) => {\r\n    const updatedAnswers = [...selectedAnswers];\r\n    updatedAnswers[index] = word;\r\n    setSelectedAnswers(updatedAnswers);\r\n  };\r\n\r\n  const handleCheckAnswers = () => {\r\n    const isCorrect = selectedAnswers.every((ans, index) => ans === correctAnswer[index]);\r\n    setIsAnswered(true);\r\n    onAnswer(isCorrect); // Notify parent of the result\r\n  };\r\n\r\n  const displaySentence = () => {\r\n    let sentenceParts = questionText.split(\"_____________\");\r\n    let result = [];\r\n\r\n    for (let i = 0; i < sentenceParts.length; i++) {\r\n      result.push(<span key={`text-${i}`}>{sentenceParts[i]}</span>);\r\n      if (i < correctAnswer.length) {\r\n        const answer = selectedAnswers[i];\r\n        result.push(\r\n          <button\r\n            key={`blank-${i}`}\r\n            className=\"inline-block bg-yellow-200 border px-2 py-1 mx-1 rounded cursor-pointer\"\r\n            onClick={() => handleOptionClick(options[i], i)}\r\n          >\r\n            {answer || \"____\"}\r\n          </button>\r\n        );\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <p>{displaySentence()}</p>\r\n      <div className=\"flex flex-wrap gap-2 mb-4\">\r\n        {options.map((option, idx) => (\r\n          <button\r\n            key={idx}\r\n            onClick={() => handleOptionClick(option, selectedAnswers.indexOf(null))}\r\n            className={`px-3 py-1 rounded border ${selectedAnswers.includes(option) ? 'bg-green-300' : 'bg-gray-200'}`}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {!isAnswered && (\r\n        <button\r\n          onClick={handleCheckAnswers}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded\"\r\n        >\r\n          Check Answers\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionCard;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}