{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\components\\\\QuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionCard = ({\n  question,\n  onAnswer\n}) => {\n  _s();\n  const [selectedWords, setSelectedWords] = useState([]);\n  const [filledSentence, setFilledSentence] = useState([]);\n  const handleWordClick = word => {\n    // If already selected, remove it\n    if (selectedWords.includes(word)) {\n      const indexToRemove = selectedWords.indexOf(word);\n      const newSelected = [...selectedWords];\n      newSelected.splice(indexToRemove, 1);\n      setSelectedWords(newSelected);\n    } else if (selectedWords.length < question.correctAnswer.length) {\n      // Add word only if slots left\n      setSelectedWords([...selectedWords, word]);\n    }\n  };\n  const renderSentence = () => {\n    const parts = question.question.split('_____________');\n    const result = [];\n    for (let i = 0; i < parts.length; i++) {\n      result.push(parts[i]);\n      if (i < selectedWords.length) {\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold underline text-blue-600 mx-1\",\n          children: selectedWords[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this));\n      } else if (i < question.correctAnswer.length) {\n        result.push(/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mx-1\",\n          children: \"_____\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this));\n      }\n    }\n    return result;\n  };\n  const handleSubmit = () => {\n    const isCorrect = JSON.stringify(selectedWords) === JSON.stringify(question.correctAnswer);\n    onAnswer(isCorrect);\n    setSelectedWords([]); // reset for next question\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-lg mb-4\",\n      children: renderSentence()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center gap-3 my-4\",\n      children: question.options.map((word, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 rounded-full transition-all duration-200 ${selectedWords.includes(word) ? 'bg-blue-600 text-white' : 'bg-gray-200 text-black hover:bg-blue-100'}`,\n        onClick: () => handleWordClick(word),\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-4 px-6 py-2 bg-green-500 text-white rounded-full hover:bg-green-600\",\n      onClick: handleSubmit,\n      disabled: selectedWords.length !== question.correctAnswer.length,\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionCard, \"gUrb9yOdaPmHVcRSrt9l6LwKC40=\");\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuestionCard","question","onAnswer","_s","selectedWords","setSelectedWords","filledSentence","setFilledSentence","handleWordClick","word","includes","indexToRemove","indexOf","newSelected","splice","length","correctAnswer","renderSentence","parts","split","result","i","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","isCorrect","JSON","stringify","options","map","index","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/components/QuestionCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst QuestionCard = ({ question, onAnswer }) => {\r\n  const [selectedWords, setSelectedWords] = useState([]);\r\n  const [filledSentence, setFilledSentence] = useState([]);\r\n  \r\n  const handleWordClick = (word) => {\r\n    // If already selected, remove it\r\n    if (selectedWords.includes(word)) {\r\n      const indexToRemove = selectedWords.indexOf(word);\r\n      const newSelected = [...selectedWords];\r\n      newSelected.splice(indexToRemove, 1);\r\n      setSelectedWords(newSelected);\r\n    } else if (selectedWords.length < question.correctAnswer.length) {\r\n      // Add word only if slots left\r\n      setSelectedWords([...selectedWords, word]);\r\n    }\r\n  };\r\n\r\n  const renderSentence = () => {\r\n    const parts = question.question.split('_____________');\r\n    const result = [];\r\n\r\n    for (let i = 0; i < parts.length; i++) {\r\n      result.push(parts[i]);\r\n      if (i < selectedWords.length) {\r\n        result.push(\r\n          <span key={i} className=\"font-semibold underline text-blue-600 mx-1\">\r\n            {selectedWords[i]}\r\n          </span>\r\n        );\r\n      } else if (i < question.correctAnswer.length) {\r\n        result.push(<span key={i} className=\"mx-1\">_____</span>);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const isCorrect = JSON.stringify(selectedWords) === JSON.stringify(question.correctAnswer);\r\n    onAnswer(isCorrect);\r\n    setSelectedWords([]); // reset for next question\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div className=\"text-lg mb-4\">{renderSentence()}</div>\r\n      <div className=\"flex flex-wrap justify-center gap-3 my-4\">\r\n        {question.options.map((word, index) => (\r\n          <button\r\n            key={index}\r\n            className={`px-4 py-2 rounded-full transition-all duration-200 ${\r\n              selectedWords.includes(word)\r\n                ? 'bg-blue-600 text-white'\r\n                : 'bg-gray-200 text-black hover:bg-blue-100'\r\n            }`}\r\n            onClick={() => handleWordClick(word)}\r\n          >\r\n            {word}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button\r\n        className=\"mt-4 px-6 py-2 bg-green-500 text-white rounded-full hover:bg-green-600\"\r\n        onClick={handleSubmit}\r\n        disabled={selectedWords.length !== question.correctAnswer.length}\r\n      >\r\n        Submit Answer\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMY,eAAe,GAAIC,IAAI,IAAK;IAChC;IACA,IAAIL,aAAa,CAACM,QAAQ,CAACD,IAAI,CAAC,EAAE;MAChC,MAAME,aAAa,GAAGP,aAAa,CAACQ,OAAO,CAACH,IAAI,CAAC;MACjD,MAAMI,WAAW,GAAG,CAAC,GAAGT,aAAa,CAAC;MACtCS,WAAW,CAACC,MAAM,CAACH,aAAa,EAAE,CAAC,CAAC;MACpCN,gBAAgB,CAACQ,WAAW,CAAC;IAC/B,CAAC,MAAM,IAAIT,aAAa,CAACW,MAAM,GAAGd,QAAQ,CAACe,aAAa,CAACD,MAAM,EAAE;MAC/D;MACAV,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEK,IAAI,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,KAAK,GAAGjB,QAAQ,CAACA,QAAQ,CAACkB,KAAK,CAAC,eAAe,CAAC;IACtD,MAAMC,MAAM,GAAG,EAAE;IAEjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACH,MAAM,EAAEM,CAAC,EAAE,EAAE;MACrCD,MAAM,CAACE,IAAI,CAACJ,KAAK,CAACG,CAAC,CAAC,CAAC;MACrB,IAAIA,CAAC,GAAGjB,aAAa,CAACW,MAAM,EAAE;QAC5BK,MAAM,CAACE,IAAI,cACTvB,OAAA;UAAcwB,SAAS,EAAC,4CAA4C;UAAAC,QAAA,EACjEpB,aAAa,CAACiB,CAAC;QAAC,GADRA,CAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACR,CAAC;MACH,CAAC,MAAM,IAAIP,CAAC,GAAGpB,QAAQ,CAACe,aAAa,CAACD,MAAM,EAAE;QAC5CK,MAAM,CAACE,IAAI,cAACvB,OAAA;UAAcwB,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAK,GAAzBH,CAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA8B,CAAC,CAAC;MAC1D;IACF;IAEA,OAAOR,MAAM;EACf,CAAC;EAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAAC5B,aAAa,CAAC,KAAK2B,IAAI,CAACC,SAAS,CAAC/B,QAAQ,CAACe,aAAa,CAAC;IAC1Fd,QAAQ,CAAC4B,SAAS,CAAC;IACnBzB,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEN,OAAA;IAAKwB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BzB,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEP,cAAc,CAAC;IAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtD7B,OAAA;MAAKwB,SAAS,EAAC,0CAA0C;MAAAC,QAAA,EACtDvB,QAAQ,CAACgC,OAAO,CAACC,GAAG,CAAC,CAACzB,IAAI,EAAE0B,KAAK,kBAChCpC,OAAA;QAEEwB,SAAS,EAAE,sDACTnB,aAAa,CAACM,QAAQ,CAACD,IAAI,CAAC,GACxB,wBAAwB,GACxB,0CAA0C,EAC7C;QACH2B,OAAO,EAAEA,CAAA,KAAM5B,eAAe,CAACC,IAAI,CAAE;QAAAe,QAAA,EAEpCf;MAAI,GARA0B,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASJ,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA;MACEwB,SAAS,EAAC,wEAAwE;MAClFa,OAAO,EAAEP,YAAa;MACtBQ,QAAQ,EAAEjC,aAAa,CAACW,MAAM,KAAKd,QAAQ,CAACe,aAAa,CAACD,MAAO;MAAAS,QAAA,EAClE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACzB,EAAA,CAtEIH,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAwElB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}