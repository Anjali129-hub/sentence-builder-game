{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchQuestions } from './data/api';\nimport QuestionCard from './components/QuestionCard';\nimport ScoreScreen from './components/ScoreScreen';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [gameStarted, setGameStarted] = useState(false);\n  useEffect(() => {\n    fetchQuestions().then(data => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setGameOver(true);\n    } else if (gameStarted && !gameOver) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [timeLeft, gameStarted, gameOver]);\n  const handleAnswer = isCorrect => {\n    if (isCorrect) setScore(prev => prev + 1);\n    const next = currentIndex + 1;\n    if (next < questions.length) {\n      setCurrentIndex(next);\n      setTimeLeft(30);\n    } else {\n      setGameOver(true);\n    }\n  };\n  const handleRestart = () => {\n    setScore(0);\n    setCurrentIndex(0);\n    setGameOver(false);\n    setTimeLeft(30);\n    setGameStarted(false);\n    fetchQuestions().then(data => {\n      setQuestions(data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-100 to-purple-200 p-6 flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-xl w-full bg-white p-6 rounded-xl shadow-2xl\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: !gameStarted ? /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 50\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -50\n          },\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl font-bold text-blue-700 mb-6\",\n            children: \"Sentence Construction Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg mb-6\",\n            children: \"Test your sentence construction skills!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-full transition\",\n            onClick: () => setGameStarted(true),\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, \"start\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this) : loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : gameOver ? /*#__PURE__*/_jsxDEV(ScoreScreen, {\n          score: score,\n          total: questions.length,\n          onRestart: handleRestart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 50\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          exit: {\n            opacity: 0,\n            y: -50\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500 font-semibold\",\n              children: [\"Time Left: \", timeLeft, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full h-2 bg-gray-200 rounded mb-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-2 bg-blue-500 rounded transition-all\",\n              style: {\n                width: `${(currentIndex + 1) / questions.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(QuestionCard, {\n            question: questions[currentIndex],\n            onAnswer: handleAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, \"game\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vMbBPAL/PC4ADhdHiraSam6azQ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchQuestions","QuestionCard","ScoreScreen","motion","AnimatePresence","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","gameOver","setGameOver","loading","setLoading","timeLeft","setTimeLeft","gameStarted","setGameStarted","then","data","timer","setInterval","prev","clearInterval","handleAnswer","isCorrect","next","length","handleRestart","className","children","mode","div","initial","opacity","y","animate","exit","fileName","_jsxFileName","lineNumber","columnNumber","onClick","total","onRestart","style","width","question","onAnswer","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchQuestions } from './data/api';\r\nimport QuestionCard from './components/QuestionCard';\r\n\r\nimport ScoreScreen from './components/ScoreScreen';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nfunction App() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchQuestions().then((data) => {\r\n      setQuestions(data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      setGameOver(true);\r\n    } else if (gameStarted && !gameOver) {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [timeLeft, gameStarted, gameOver]);\r\n\r\n  const handleAnswer = (isCorrect) => {\r\n    if (isCorrect) setScore(prev => prev + 1);\r\n    const next = currentIndex + 1;\r\n    if (next < questions.length) {\r\n      setCurrentIndex(next);\r\n      setTimeLeft(30);\r\n    } else {\r\n      setGameOver(true);\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setScore(0);\r\n    setCurrentIndex(0);\r\n    setGameOver(false);\r\n    setTimeLeft(30);\r\n    setGameStarted(false);\r\n    fetchQuestions().then((data) => {\r\n      setQuestions(data);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-100 to-purple-200 p-6 flex items-center justify-center\">\r\n      <div className=\"max-w-xl w-full bg-white p-6 rounded-xl shadow-2xl\">\r\n        <AnimatePresence mode=\"wait\">\r\n          {!gameStarted ? (\r\n            <motion.div\r\n              key=\"start\"\r\n              initial={{ opacity: 0, y: 50 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -50 }}\r\n              className=\"text-center\"\r\n            >\r\n              <h1 className=\"text-4xl font-bold text-blue-700 mb-6\">Sentence Construction Game</h1>\r\n              <p className=\"text-lg mb-6\">Test your sentence construction skills!</p>\r\n              <button\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-full transition\"\r\n                onClick={() => setGameStarted(true)}\r\n              >\r\n                Start Game\r\n              </button>\r\n            </motion.div>\r\n          ) : loading ? (\r\n            <div className=\"text-center\">Loading...</div>\r\n          ) : gameOver ? (\r\n            <ScoreScreen score={score} total={questions.length} onRestart={handleRestart} />\r\n          ) : (\r\n            <motion.div\r\n              key=\"game\"\r\n              initial={{ opacity: 0, y: 50 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -50 }}\r\n            >\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <div className=\"text-red-500 font-semibold\">Time Left: {timeLeft}s</div>\r\n                <div className=\"text-sm text-gray-500\">Question {currentIndex + 1} of {questions.length}</div>\r\n              </div>\r\n              <div className=\"w-full h-2 bg-gray-200 rounded mb-4\">\r\n                <div\r\n                  className=\"h-2 bg-blue-500 rounded transition-all\"\r\n                  style={{ width: `${((currentIndex + 1) / questions.length) * 100}%` }}\r\n                />\r\n              </div>\r\n              <QuestionCard\r\n                question={questions[currentIndex]}\r\n                onAnswer={handleAnswer}\r\n              />\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}