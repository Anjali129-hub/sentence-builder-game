{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchQuestions } from './components/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getQuestions = async () => {\n      try {\n        const data = await fetchQuestions(); // Fetch the questions\n        setQuestions(data); // Set the fetched data to state\n        console.log(\"Questions in state:\", data); // Log the questions in state\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getQuestions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) // Display while loading\n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions.length > 0 ? questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: question.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this) // Display question text\n        ) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No questions available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hQsoyP7dP+PYL/t0c73K0xJq3/w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchQuestions","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","loading","setLoading","getQuestions","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","question","index","text","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchQuestions } from './components/api';\r\n\r\nconst App = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const getQuestions = async () => {\r\n      try {\r\n        const data = await fetchQuestions();  // Fetch the questions\r\n        setQuestions(data);  // Set the fetched data to state\r\n        console.log(\"Questions in state:\", data);  // Log the questions in state\r\n      } catch (error) {\r\n        console.error('Error fetching questions:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    getQuestions();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <h2>Loading questions...</h2>  // Display while loading\r\n      ) : (\r\n        <div>\r\n          <h1>Questions</h1>\r\n          <ul>\r\n            {questions.length > 0 ? (\r\n              questions.map((question, index) => (\r\n                <li key={index}>{question.text}</li>  // Display question text\r\n              ))\r\n            ) : (\r\n              <p>No questions available.</p>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMV,cAAc,CAAC,CAAC,CAAC,CAAE;QACtCM,YAAY,CAACI,IAAI,CAAC,CAAC,CAAE;QACrBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,IAAI,CAAC,CAAC,CAAE;MAC7C,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,SAAS;QACRL,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAY,QAAA,EACGP,OAAO,gBACNL,OAAA;MAAAY,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,CAAE;IAAA,eAE/BhB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBhB,OAAA;QAAAY,QAAA,EACGT,SAAS,CAACc,MAAM,GAAG,CAAC,GACnBd,SAAS,CAACe,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC5BpB,OAAA;UAAAY,QAAA,EAAiBO,QAAQ,CAACE;QAAI,GAArBD,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAAC,CAAE;QACvC,CAAC,gBAEFhB,OAAA;UAAAY,QAAA,EAAG;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC9B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAxCID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}