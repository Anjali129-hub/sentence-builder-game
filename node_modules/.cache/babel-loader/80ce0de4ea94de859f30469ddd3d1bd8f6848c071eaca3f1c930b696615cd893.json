{"ast":null,"code":"import React,{useState,useEffect}from'react';import{fetchQuestions}from'./data/api';// Fetching questions from the backend\nimport QuestionCard from'./components/QuestionCard';// To display each question\nimport ScoreScreen from'./components/ScoreScreen';// For displaying the final score and feedback\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[questions,setQuestions]=useState([]);const[currentIndex,setCurrentIndex]=useState(0);const[score,setScore]=useState(0);const[gameOver,setGameOver]=useState(false);const[loading,setLoading]=useState(true);const[timeLeft,setTimeLeft]=useState(30);// 30 seconds timer\nconst[gameStarted,setGameStarted]=useState(false);// State to track if the game has started\nuseEffect(()=>{fetchQuestions().then(data=>{setQuestions(data);setLoading(false);});},[]);useEffect(()=>{if(timeLeft===0){setGameOver(true);}else if(gameStarted){const timer=setInterval(()=>{setTimeLeft(prev=>prev-1);},1000);return()=>clearInterval(timer);// Clear the timer when component unmounts or game ends\n}},[timeLeft,gameStarted]);const handleAnswer=isCorrect=>{if(isCorrect)setScore(prevScore=>prevScore+1);// Using functional state update\nconst next=currentIndex+1;if(next<questions.length){setCurrentIndex(next);setTimeLeft(30);// Reset timer for next question\n}else{setGameOver(true);// End the game\n}};const handleRestart=()=>{setScore(0);setCurrentIndex(0);setGameOver(false);setTimeLeft(30);// Reset time\nsetLoading(true);// Reset loading\nsetGameStarted(false);// Reset game started flag\nfetchQuestions().then(data=>{setQuestions(data);setLoading(false);});};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 p-6 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"max-w-md w-full bg-white p-8 rounded-lg shadow-xl\",children:!gameStarted?/*#__PURE__*/// Start Page\n_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-yellow-400 to-red-500 mb-6\",children:\"Sentence Construction Game\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl font-semibold mb-6 text-gray-700\",children:\"Test your sentence construction skills!\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-8 py-3 bg-gradient-to-r from-indigo-600 to-indigo-800 text-white text-xl font-semibold rounded-full shadow-lg transform hover:scale-105 transition-all duration-200\",onClick:()=>setGameStarted(true),children:\"Start Game\"})]}):loading?/*#__PURE__*/// Loading State\n_jsx(\"div\",{className:\"text-center\",children:\"Loading...\"}):gameOver?/*#__PURE__*/// End Screen (Game Over)\n_jsx(ScoreScreen,{score:score,total:questions.length,onRestart:handleRestart}):/*#__PURE__*/// Game Screen\n_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-xl mb-4 font-semibold text-red-500\",children:[\"Time Left: \",timeLeft,\"s\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-lg mb-4\",children:[\"Question \",currentIndex+1,\" of \",questions.length]}),/*#__PURE__*/_jsx(QuestionCard,{question:questions[currentIndex],onAnswer:handleAnswer}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4\",children:/*#__PURE__*/_jsx(\"button\",{className:\"px-6 py-2 bg-blue-500 text-white rounded-full\",onClick:()=>handleAnswer(true)// Simulated correct answer\n,children:\"Submit Answer\"})})]})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","fetchQuestions","QuestionCard","ScoreScreen","jsx","_jsx","jsxs","_jsxs","App","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","gameOver","setGameOver","loading","setLoading","timeLeft","setTimeLeft","gameStarted","setGameStarted","then","data","timer","setInterval","prev","clearInterval","handleAnswer","isCorrect","prevScore","next","length","handleRestart","className","children","onClick","total","onRestart","question","onAnswer"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchQuestions } from './data/api'; // Fetching questions from the backend\r\nimport QuestionCard from './components/QuestionCard'; // To display each question\r\nimport ScoreScreen from './components/ScoreScreen'; // For displaying the final score and feedback\r\n\r\nfunction App() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds timer\r\n  const [gameStarted, setGameStarted] = useState(false); // State to track if the game has started\r\n\r\n  useEffect(() => {\r\n    fetchQuestions().then((data) => {\r\n      setQuestions(data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      setGameOver(true);\r\n    } else if (gameStarted) {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer); // Clear the timer when component unmounts or game ends\r\n    }\r\n  }, [timeLeft, gameStarted]);\r\n\r\n  const handleAnswer = (isCorrect) => {\r\n    if (isCorrect) setScore(prevScore => prevScore + 1); // Using functional state update\r\n    const next = currentIndex + 1;\r\n    if (next < questions.length) {\r\n      setCurrentIndex(next);\r\n      setTimeLeft(30); // Reset timer for next question\r\n    } else {\r\n      setGameOver(true); // End the game\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setScore(0);\r\n    setCurrentIndex(0);\r\n    setGameOver(false);\r\n    setTimeLeft(30); // Reset time\r\n    setLoading(true); // Reset loading\r\n    setGameStarted(false); // Reset game started flag\r\n    fetchQuestions().then((data) => {\r\n      setQuestions(data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 p-6 flex items-center justify-center\">\r\n      <div className=\"max-w-md w-full bg-white p-8 rounded-lg shadow-xl\">\r\n        {!gameStarted ? (\r\n          // Start Page\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-4xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-yellow-400 to-red-500 mb-6\">\r\n              Sentence Construction Game\r\n            </h1>\r\n            <p className=\"text-xl font-semibold mb-6 text-gray-700\">Test your sentence construction skills!</p>\r\n            <button\r\n              className=\"px-8 py-3 bg-gradient-to-r from-indigo-600 to-indigo-800 text-white text-xl font-semibold rounded-full shadow-lg transform hover:scale-105 transition-all duration-200\"\r\n              onClick={() => setGameStarted(true)}\r\n            >\r\n              Start Game\r\n            </button>\r\n          </div>\r\n        ) : loading ? (\r\n          // Loading State\r\n          <div className=\"text-center\">Loading...</div>\r\n        ) : gameOver ? (\r\n          // End Screen (Game Over)\r\n          <ScoreScreen score={score} total={questions.length} onRestart={handleRestart} />\r\n        ) : (\r\n          // Game Screen\r\n          <div className=\"text-center\">\r\n            <div className=\"text-xl mb-4 font-semibold text-red-500\">Time Left: {timeLeft}s</div>\r\n            <div className=\"text-lg mb-4\">Question {currentIndex + 1} of {questions.length}</div>\r\n            <QuestionCard\r\n              question={questions[currentIndex]}\r\n              onAnswer={handleAnswer}\r\n            />\r\n            <div className=\"mt-4\">\r\n              <button\r\n                className=\"px-6 py-2 bg-blue-500 text-white rounded-full\"\r\n                onClick={() => handleAnswer(true)} // Simulated correct answer\r\n              >\r\n                Submit Answer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}