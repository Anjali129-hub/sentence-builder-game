{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchQuestions } from \"./api\"; // Import fetchQuestions from api.js\nimport QuestionCard from \"./QuestionCard\"; // Assuming you already have a QuestionCard component\nimport ScoreScreen from \"./ScoreScreen\"; // Assuming you already have a ScoreScreen component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showScoreScreen, setShowScoreScreen] = useState(false);\n  useEffect(() => {\n    // Fetch questions when the component mounts\n    const getQuestions = async () => {\n      const fetchedQuestions = await fetchQuestions();\n      setQuestions(fetchedQuestions);\n    };\n    getQuestions(); // Call the function to fetch questions\n  }, []);\n  const handleAnswer = isCorrect => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    // Move to the next question or show the score screen\n    if (currentQuestionIndex + 1 < questions.length) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowScoreScreen(true);\n    }\n  };\n  const handleRestart = () => {\n    setScore(0);\n    setCurrentQuestionIndex(0);\n    setShowScoreScreen(false);\n  };\n  if (showScoreScreen) {\n    return /*#__PURE__*/_jsxDEV(ScoreScreen, {\n      score: score,\n      total: questions.length,\n      onRestart: handleRestart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: questions.length > 0 ? /*#__PURE__*/_jsxDEV(QuestionCard, {\n      question: questions[currentQuestionIndex],\n      onAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wX6LRvRAtxgG+E6CM9pI/0Hn3vY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchQuestions","QuestionCard","ScoreScreen","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showScoreScreen","setShowScoreScreen","getQuestions","fetchedQuestions","handleAnswer","isCorrect","length","handleRestart","total","onRestart","fileName","_jsxFileName","lineNumber","columnNumber","className","children","question","onAnswer","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchQuestions } from \"./api\"; // Import fetchQuestions from api.js\r\nimport QuestionCard from \"./QuestionCard\"; // Assuming you already have a QuestionCard component\r\nimport ScoreScreen from \"./ScoreScreen\"; // Assuming you already have a ScoreScreen component\r\n\r\nfunction App() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScoreScreen, setShowScoreScreen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch questions when the component mounts\r\n    const getQuestions = async () => {\r\n      const fetchedQuestions = await fetchQuestions();\r\n      setQuestions(fetchedQuestions);\r\n    };\r\n    \r\n    getQuestions(); // Call the function to fetch questions\r\n  }, []);\r\n\r\n  const handleAnswer = (isCorrect) => {\r\n    if (isCorrect) {\r\n      setScore(score + 1);\r\n    }\r\n\r\n    // Move to the next question or show the score screen\r\n    if (currentQuestionIndex + 1 < questions.length) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      setShowScoreScreen(true);\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setScore(0);\r\n    setCurrentQuestionIndex(0);\r\n    setShowScoreScreen(false);\r\n  };\r\n\r\n  if (showScoreScreen) {\r\n    return <ScoreScreen score={score} total={questions.length} onRestart={handleRestart} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {questions.length > 0 ? (\r\n        <QuestionCard\r\n          question={questions[currentQuestionIndex]}\r\n          onAnswer={handleAnswer}\r\n        />\r\n      ) : (\r\n        <p>Loading questions...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,OAAO,CAAC,CAAC;AACxC,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAC3C,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,gBAAgB,GAAG,MAAMhB,cAAc,CAAC,CAAC;MAC/CQ,YAAY,CAACQ,gBAAgB,CAAC;IAChC,CAAC;IAEDD,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAIC,SAAS,IAAK;IAClC,IAAIA,SAAS,EAAE;MACbN,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;;IAEA;IACA,IAAIF,oBAAoB,GAAG,CAAC,GAAGF,SAAS,CAACY,MAAM,EAAE;MAC/CT,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD,CAAC,MAAM;MACLK,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1BR,QAAQ,CAAC,CAAC,CAAC;IACXF,uBAAuB,CAAC,CAAC,CAAC;IAC1BI,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,IAAID,eAAe,EAAE;IACnB,oBAAOT,OAAA,CAACF,WAAW;MAACS,KAAK,EAAEA,KAAM;MAACU,KAAK,EAAEd,SAAS,CAACY,MAAO;MAACG,SAAS,EAAEF;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzF;EAEA,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBrB,SAAS,CAACY,MAAM,GAAG,CAAC,gBACnBf,OAAA,CAACH,YAAY;MACX4B,QAAQ,EAAEtB,SAAS,CAACE,oBAAoB,CAAE;MAC1CqB,QAAQ,EAAEb;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,gBAEFtB,OAAA;MAAAwB,QAAA,EAAG;IAAoB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC3B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpB,EAAA,CAnDQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}