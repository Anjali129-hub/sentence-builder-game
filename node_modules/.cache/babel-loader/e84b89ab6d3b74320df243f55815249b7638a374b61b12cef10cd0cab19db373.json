{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport QuestionCard from './components/QuestionCard';\nimport ScoreScreen from './components/ScoreScreen';\n\n// Function to fetch questions from db.json using fetch API\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchQuestions = async () => {\n  try {\n    const response = await fetch('http://localhost:5000/questions');\n    if (!response.ok) {\n      throw new Error('Failed to fetch questions');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching questions:', error);\n    return [];\n  }\n};\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds timer\n\n  // Fetch questions on component mount\n  useEffect(() => {\n    fetchQuestions().then(data => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  }, []);\n\n  // Timer logic\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setGameOver(true);\n    } else {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [timeLeft]);\n\n  // Handle answer submission\n  const handleAnswer = isCorrect => {\n    if (isCorrect) setScore(score + 1);\n    const next = currentIndex + 1;\n    if (next < questions.length) {\n      setCurrentIndex(next);\n    } else {\n      setGameOver(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-6\",\n      children: \"Sentence Construction Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : gameOver ? /*#__PURE__*/_jsxDEV(ScoreScreen, {\n      score: score,\n      total: questions.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : questions.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-xl mb-4\",\n        children: [\"Time Left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(QuestionCard, {\n        question: questions[currentIndex],\n        onAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uTMKNVzxdwG4iEOS0WsF8GciioQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","QuestionCard","ScoreScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchQuestions","response","fetch","ok","Error","data","json","error","console","App","_s","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","gameOver","setGameOver","loading","setLoading","timeLeft","setTimeLeft","then","timer","setInterval","prev","clearInterval","handleAnswer","isCorrect","next","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","total","question","onAnswer","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport QuestionCard from './components/QuestionCard';\r\nimport ScoreScreen from './components/ScoreScreen';\r\n\r\n// Function to fetch questions from db.json using fetch API\r\nconst fetchQuestions = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/questions');\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch questions');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error fetching questions:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds timer\r\n\r\n  // Fetch questions on component mount\r\n  useEffect(() => {\r\n    fetchQuestions().then((data) => {\r\n      setQuestions(data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  // Timer logic\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      setGameOver(true);\r\n    } else {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  // Handle answer submission\r\n  const handleAnswer = (isCorrect) => {\r\n    if (isCorrect) setScore(score + 1);\r\n    const next = currentIndex + 1;\r\n    if (next < questions.length) {\r\n      setCurrentIndex(next);\r\n    } else {\r\n      setGameOver(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-6\">\r\n      <h1 className=\"text-3xl font-bold text-center mb-6\">Sentence Construction Game</h1>\r\n      {loading ? (\r\n        <div className=\"text-center\">Loading...</div>\r\n      ) : gameOver ? (\r\n        <ScoreScreen score={score} total={questions.length} />\r\n      ) : (\r\n        questions.length > 0 && (\r\n          <>\r\n            <div className=\"text-center text-xl mb-4\">Time Left: {timeLeft}s</div>\r\n            <QuestionCard\r\n              question={questions[currentIndex]}\r\n              onAnswer={handleAnswer}\r\n            />\r\n          </>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}