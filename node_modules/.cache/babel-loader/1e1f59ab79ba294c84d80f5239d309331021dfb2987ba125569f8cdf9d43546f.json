{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchQuestions } from './api'; // Import the function to fetch questions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [selectedOptions, setSelectedOptions] = useState([null, null, null, null]);\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\n  useEffect(() => {\n    const getQuestions = async () => {\n      const fetchedQuestions = await fetchQuestions();\n      setQuestions(fetchedQuestions); // Set the questions in state\n    };\n    getQuestions();\n  }, []);\n  const handleOptionChange = (index, option) => {\n    const updatedSelections = [...selectedOptions];\n    updatedSelections[index] = option;\n    setSelectedOptions(updatedSelections);\n  };\n  const checkAnswer = () => {\n    if (questions.length > 0) {\n      const correct = selectedOptions.every((option, index) => {\n        return option === questions[0].correctAnswer[index];\n      });\n      setIsAnswerCorrect(correct);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fill in the Blanks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: questions[0].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: questions[0].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `option${index}`,\n              value: option,\n              checked: selectedOptions[index] === option,\n              onChange: () => handleOptionChange(index, option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), option]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        children: \"Check Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), isAnswerCorrect !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isAnswerCorrect ? \"Correct!\" : \"Incorrect, try again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"NNxCxfcH2DddXkqRvgHo4WJOYoQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchQuestions","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","selectedOptions","setSelectedOptions","isAnswerCorrect","setIsAnswerCorrect","getQuestions","fetchedQuestions","handleOptionChange","index","option","updatedSelections","checkAnswer","length","correct","every","correctAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","type","name","value","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchQuestions } from './api';  // Import the function to fetch questions\r\n\r\nconst App = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [selectedOptions, setSelectedOptions] = useState([null, null, null, null]);\r\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getQuestions = async () => {\r\n      const fetchedQuestions = await fetchQuestions();\r\n      setQuestions(fetchedQuestions); // Set the questions in state\r\n    };\r\n\r\n    getQuestions();\r\n  }, []);\r\n\r\n  const handleOptionChange = (index, option) => {\r\n    const updatedSelections = [...selectedOptions];\r\n    updatedSelections[index] = option;\r\n    setSelectedOptions(updatedSelections);\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (questions.length > 0) {\r\n      const correct = selectedOptions.every((option, index) => {\r\n        return option === questions[0].correctAnswer[index];\r\n      });\r\n      setIsAnswerCorrect(correct);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Fill in the Blanks</h1>\r\n      {questions.length > 0 && (\r\n        <div>\r\n          <p>{questions[0].question}</p>\r\n          <div>\r\n            {questions[0].options.map((option, index) => (\r\n              <div key={index}>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={`option${index}`}\r\n                    value={option}\r\n                    checked={selectedOptions[index] === option}\r\n                    onChange={() => handleOptionChange(index, option)}\r\n                  />\r\n                  {option}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <button onClick={checkAnswer}>Check Answer</button>\r\n          {isAnswerCorrect !== null && (\r\n            <p>{isAnswerCorrect ? \"Correct!\" : \"Incorrect, try again!\"}</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}