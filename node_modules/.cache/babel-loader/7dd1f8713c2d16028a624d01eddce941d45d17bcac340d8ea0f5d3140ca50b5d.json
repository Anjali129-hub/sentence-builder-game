{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchQuestions } from './data/api'; // Fetching questions from the backend\nimport QuestionCard from './components/QuestionCard'; // To display each question\nimport ScoreScreen from './components/ScoreScreen'; // For displaying the final score and feedback\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds timer\n  const [gameStarted, setGameStarted] = useState(false); // State to track if the game has started\n\n  useEffect(() => {\n    fetchQuestions().then(data => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setGameOver(true);\n    } else if (gameStarted) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer); // Clear the timer when component unmounts or game ends\n    }\n  }, [timeLeft, gameStarted]);\n  const handleAnswer = isCorrect => {\n    if (isCorrect) setScore(prevScore => prevScore + 1); // Using functional state update\n    const next = currentIndex + 1;\n    if (next < questions.length) {\n      setCurrentIndex(next);\n      setTimeLeft(30); // Reset timer for next question\n    } else {\n      setGameOver(true); // End the game\n    }\n  };\n  const handleRestart = () => {\n    setScore(0);\n    setCurrentIndex(0);\n    setGameOver(false);\n    setTimeLeft(30); // Reset time\n    setLoading(true); // Reset loading\n    setGameStarted(false); // Reset game started flag\n    fetchQuestions().then(data => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6 flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md w-full bg-white p-8 rounded-lg shadow-lg\",\n      children: !gameStarted ?\n      /*#__PURE__*/\n      // Start Page\n      _jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-6\",\n          children: \"Sentence Construction Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-6 text-lg\",\n          children: \"Test your sentence construction skills!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-6 py-2 bg-blue-500 text-white rounded-full\",\n          onClick: () => setGameStarted(true),\n          children: \"Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : loading ?\n      /*#__PURE__*/\n      // Loading State\n      _jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : gameOver ?\n      /*#__PURE__*/\n      // End Screen (Game Over)\n      _jsxDEV(ScoreScreen, {\n        score: score,\n        total: questions.length,\n        onRestart: handleRestart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Game Screen\n      _jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl mb-4 font-semibold text-red-500\",\n          children: [\"Time Left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg mb-4\",\n          children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(QuestionCard, {\n          question: questions[currentIndex],\n          onAnswer: handleAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-6 py-2 bg-blue-500 text-white rounded-full\",\n            onClick: () => handleAnswer(true) // Simulated correct answer\n            ,\n            children: \"Submit Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vMbBPAL/PC4ADhdHiraSam6azQ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchQuestions","QuestionCard","ScoreScreen","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","gameOver","setGameOver","loading","setLoading","timeLeft","setTimeLeft","gameStarted","setGameStarted","then","data","timer","setInterval","prev","clearInterval","handleAnswer","isCorrect","prevScore","next","length","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","total","onRestart","question","onAnswer","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchQuestions } from './data/api'; // Fetching questions from the backend\r\nimport QuestionCard from './components/QuestionCard'; // To display each question\r\nimport ScoreScreen from './components/ScoreScreen'; // For displaying the final score and feedback\r\n\r\nfunction App() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds timer\r\n  const [gameStarted, setGameStarted] = useState(false); // State to track if the game has started\r\n\r\n  useEffect(() => {\r\n    fetchQuestions().then((data) => {\r\n      setQuestions(data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      setGameOver(true);\r\n    } else if (gameStarted) {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer); // Clear the timer when component unmounts or game ends\r\n    }\r\n  }, [timeLeft, gameStarted]);\r\n\r\n  const handleAnswer = (isCorrect) => {\r\n    if (isCorrect) setScore(prevScore => prevScore + 1); // Using functional state update\r\n    const next = currentIndex + 1;\r\n    if (next < questions.length) {\r\n      setCurrentIndex(next);\r\n      setTimeLeft(30); // Reset timer for next question\r\n    } else {\r\n      setGameOver(true); // End the game\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setScore(0);\r\n    setCurrentIndex(0);\r\n    setGameOver(false);\r\n    setTimeLeft(30); // Reset time\r\n    setLoading(true); // Reset loading\r\n    setGameStarted(false); // Reset game started flag\r\n    fetchQuestions().then((data) => {\r\n      setQuestions(data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-6 flex items-center justify-center\">\r\n      <div className=\"max-w-md w-full bg-white p-8 rounded-lg shadow-lg\">\r\n        {!gameStarted ? (\r\n          // Start Page\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Sentence Construction Game</h1>\r\n            <p className=\"mb-6 text-lg\">Test your sentence construction skills!</p>\r\n            <button\r\n              className=\"px-6 py-2 bg-blue-500 text-white rounded-full\"\r\n              onClick={() => setGameStarted(true)}\r\n            >\r\n              Start Game\r\n            </button>\r\n          </div>\r\n        ) : loading ? (\r\n          // Loading State\r\n          <div className=\"text-center\">Loading...</div>\r\n        ) : gameOver ? (\r\n          // End Screen (Game Over)\r\n          <ScoreScreen score={score} total={questions.length} onRestart={handleRestart} />\r\n        ) : (\r\n          // Game Screen\r\n          <div className=\"text-center\">\r\n            <div className=\"text-xl mb-4 font-semibold text-red-500\">Time Left: {timeLeft}s</div>\r\n            <div className=\"text-lg mb-4\">Question {currentIndex + 1} of {questions.length}</div> {/* Display current question */}\r\n            <QuestionCard\r\n              question={questions[currentIndex]}\r\n              onAnswer={handleAnswer}\r\n            />\r\n            <div className=\"mt-4\">\r\n              <button\r\n                className=\"px-6 py-2 bg-blue-500 text-white rounded-full\"\r\n                onClick={() => handleAnswer(true)} // Simulated correct answer\r\n              >\r\n                Submit Answer\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}