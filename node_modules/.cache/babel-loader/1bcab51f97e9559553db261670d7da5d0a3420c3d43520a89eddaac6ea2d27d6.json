{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedWords, setSelectedWords] = useState([\"\", \"\", \"\", \"\"]);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n\n  // Fetch questions from the backend (your db.json or server)\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/questions\") // Adjust the URL based on your backend setup\n    .then(response => {\n      if (Array.isArray(response.data)) {\n        setQuestions(response.data);\n      } else {\n        console.error(\"Data is not an array:\", response.data);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching questions:\", error);\n    });\n  }, []);\n\n  // Timer logic\n  useEffect(() => {\n    if (gameStarted && timeLeft > 0 && !gameFinished) {\n      const timer = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [gameStarted, timeLeft, gameFinished]);\n  const handleOptionClick = option => {\n    const updatedWords = [...selectedWords];\n    const firstEmptyIndex = updatedWords.findIndex(word => word === \"\");\n    if (firstEmptyIndex !== -1) {\n      updatedWords[firstEmptyIndex] = option;\n      setSelectedWords(updatedWords);\n    } else {\n      // Allow unselecting the word if clicked again\n      const wordIndex = updatedWords.indexOf(option);\n      if (wordIndex !== -1) {\n        updatedWords[wordIndex] = \"\";\n        setSelectedWords(updatedWords);\n      }\n    }\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedWords([\"\", \"\", \"\", \"\"]);\n      setTimeLeft(30); // Reset timer for the next question\n    } else {\n      setGameFinished(true);\n    }\n  };\n  const handleStartGame = () => {\n    setGameStarted(true);\n  };\n  const currentQuestion = questions[currentQuestionIndex];\n  if (!gameStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-screen bg-gray-100 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-4\",\n        children: \"Sentence Construction Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-6 max-w-xl text-gray-700\",\n        children: \"Select the correct words to fill in the blanks and form meaningful sentences.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartGame,\n        className: \"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\",\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n  if (gameFinished) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center h-screen bg-gray-100 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-4\",\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-6 max-w-xl text-gray-700\",\n        children: \"Thank you for playing! Your final score is...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto px-4 py-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Sentence Construction Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-4 border rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-4 text-lg\",\n        children: currentQuestion.question.split(\"____________\").map((part, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [part, selectedWords[index] && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: selectedWords[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), index < 3 && selectedWords[index] === \"\" && \" _____ \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-3\",\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionClick(option),\n          className: \"p-2 rounded-lg bg-blue-500 hover:bg-blue-600 text-white font-semibold\",\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time Left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), selectedWords.every(word => word !== \"\") && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        className: \"mt-4 bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\",\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eHzkiTN0Rv6btJNNrBU/HQe0ia4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedWords","setSelectedWords","timeLeft","setTimeLeft","gameStarted","setGameStarted","gameFinished","setGameFinished","get","then","response","Array","isArray","data","console","error","catch","timer","setInterval","prevTime","clearInterval","handleOptionClick","option","updatedWords","firstEmptyIndex","findIndex","word","wordIndex","indexOf","handleNextQuestion","length","handleStartGame","currentQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","split","map","part","index","options","every","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedWords, setSelectedWords] = useState([\"\", \"\", \"\", \"\"]);\r\n  const [timeLeft, setTimeLeft] = useState(30);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [gameFinished, setGameFinished] = useState(false);\r\n\r\n  // Fetch questions from the backend (your db.json or server)\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/questions\") // Adjust the URL based on your backend setup\r\n      .then((response) => {\r\n        if (Array.isArray(response.data)) {\r\n          setQuestions(response.data);\r\n        } else {\r\n          console.error(\"Data is not an array:\", response.data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching questions:\", error);\r\n      });\r\n  }, []);\r\n\r\n  // Timer logic\r\n  useEffect(() => {\r\n    if (gameStarted && timeLeft > 0 && !gameFinished) {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prevTime) => prevTime - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [gameStarted, timeLeft, gameFinished]);\r\n\r\n  const handleOptionClick = (option) => {\r\n    const updatedWords = [...selectedWords];\r\n    const firstEmptyIndex = updatedWords.findIndex((word) => word === \"\");\r\n    if (firstEmptyIndex !== -1) {\r\n      updatedWords[firstEmptyIndex] = option;\r\n      setSelectedWords(updatedWords);\r\n    } else {\r\n      // Allow unselecting the word if clicked again\r\n      const wordIndex = updatedWords.indexOf(option);\r\n      if (wordIndex !== -1) {\r\n        updatedWords[wordIndex] = \"\";\r\n        setSelectedWords(updatedWords);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setSelectedWords([\"\", \"\", \"\", \"\"]);\r\n      setTimeLeft(30); // Reset timer for the next question\r\n    } else {\r\n      setGameFinished(true);\r\n    }\r\n  };\r\n\r\n  const handleStartGame = () => {\r\n    setGameStarted(true);\r\n  };\r\n\r\n  const currentQuestion = questions[currentQuestionIndex];\r\n\r\n  if (!gameStarted) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100 text-center\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">Sentence Construction Game</h1>\r\n        <p className=\"mb-6 max-w-xl text-gray-700\">\r\n          Select the correct words to fill in the blanks and form meaningful sentences.\r\n        </p>\r\n        <button\r\n          onClick={handleStartGame}\r\n          className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Start Game\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (gameFinished) {\r\n    return (\r\n      <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100 text-center\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">Game Over!</h1>\r\n        <p className=\"mb-6 max-w-xl text-gray-700\">\r\n          Thank you for playing! Your final score is...\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto px-4 py-6\">\r\n      <h1 className=\"text-2xl font-bold mb-6 text-center\">Sentence Construction Game</h1>\r\n\r\n      <div className=\"mb-8 p-4 border rounded-lg\">\r\n        <h2 className=\"mb-4 text-lg\">\r\n          {/* Render question with blanks */}\r\n          {currentQuestion.question.split(\"____________\").map((part, index) => (\r\n            <span key={index}>\r\n              {part}\r\n              {selectedWords[index] && (\r\n                <span className=\"font-semibold\">{selectedWords[index]}</span>\r\n              )}\r\n              {index < 3 && selectedWords[index] === \"\" && \" _____ \"}\r\n            </span>\r\n          ))}\r\n        </h2>\r\n\r\n        <div className=\"grid grid-cols-2 gap-3\">\r\n          {/* Render options for each question */}\r\n          {currentQuestion.options.map((option, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => handleOptionClick(option)}\r\n              className=\"p-2 rounded-lg bg-blue-500 hover:bg-blue-600 text-white font-semibold\"\r\n            >\r\n              {option}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"text-center mt-4\">\r\n        <p>Time Left: {timeLeft}s</p>\r\n        {selectedWords.every(word => word !== \"\") && (\r\n          <button\r\n            onClick={handleNextQuestion}\r\n            className=\"mt-4 bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\"\r\n          >\r\n            Next Question\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpE,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACAC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFiB,GAAG,CAAC,iCAAiC,CAAC,CAAC;IAAA,CACvCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACG,IAAI,CAAC,EAAE;QAChChB,YAAY,CAACa,QAAQ,CAACG,IAAI,CAAC;MAC7B,CAAC,MAAM;QACLC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEL,QAAQ,CAACG,IAAI,CAAC;MACvD;IACF,CAAC,CAAC,CACDG,KAAK,CAAED,KAAK,IAAK;MAChBD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAzB,SAAS,CAAC,MAAM;IACd,IAAIc,WAAW,IAAIF,QAAQ,GAAG,CAAC,IAAI,CAACI,YAAY,EAAE;MAChD,MAAMW,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC9Bf,WAAW,CAAEgB,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MACzC,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;IACnC;EACF,CAAC,EAAE,CAACb,WAAW,EAAEF,QAAQ,EAAEI,YAAY,CAAC,CAAC;EAEzC,MAAMe,iBAAiB,GAAIC,MAAM,IAAK;IACpC,MAAMC,YAAY,GAAG,CAAC,GAAGvB,aAAa,CAAC;IACvC,MAAMwB,eAAe,GAAGD,YAAY,CAACE,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAK,EAAE,CAAC;IACrE,IAAIF,eAAe,KAAK,CAAC,CAAC,EAAE;MAC1BD,YAAY,CAACC,eAAe,CAAC,GAAGF,MAAM;MACtCrB,gBAAgB,CAACsB,YAAY,CAAC;IAChC,CAAC,MAAM;MACL;MACA,MAAMI,SAAS,GAAGJ,YAAY,CAACK,OAAO,CAACN,MAAM,CAAC;MAC9C,IAAIK,SAAS,KAAK,CAAC,CAAC,EAAE;QACpBJ,YAAY,CAACI,SAAS,CAAC,GAAG,EAAE;QAC5B1B,gBAAgB,CAACsB,YAAY,CAAC;MAChC;IACF;EACF,CAAC;EAED,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI/B,oBAAoB,GAAGF,SAAS,CAACkC,MAAM,GAAG,CAAC,EAAE;MAC/C/B,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;MACjDG,gBAAgB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MAClCE,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM;MACLI,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAED,MAAMwB,eAAe,GAAGA,CAAA,KAAM;IAC5B1B,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM2B,eAAe,GAAGpC,SAAS,CAACE,oBAAoB,CAAC;EAEvD,IAAI,CAACM,WAAW,EAAE;IAChB,oBACEX,OAAA;MAAKwC,SAAS,EAAC,4EAA4E;MAAAC,QAAA,gBACzFzC,OAAA;QAAIwC,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvE7C,OAAA;QAAGwC,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAE3C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ7C,OAAA;QACE8C,OAAO,EAAER,eAAgB;QACzBE,SAAS,EAAC,4DAA4D;QAAAC,QAAA,EACvE;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,IAAIhC,YAAY,EAAE;IAChB,oBACEb,OAAA;MAAKwC,SAAS,EAAC,4EAA4E;MAAAC,QAAA,gBACzFzC,OAAA;QAAIwC,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvD7C,OAAA;QAAGwC,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAE3C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEV;EAEA,oBACE7C,OAAA;IAAKwC,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CzC,OAAA;MAAIwC,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnF7C,OAAA;MAAKwC,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCzC,OAAA;QAAIwC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAEzBF,eAAe,CAACQ,QAAQ,CAACC,KAAK,CAAC,cAAc,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9DnD,OAAA;UAAAyC,QAAA,GACGS,IAAI,EACJ3C,aAAa,CAAC4C,KAAK,CAAC,iBACnBnD,OAAA;YAAMwC,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAElC,aAAa,CAAC4C,KAAK;UAAC;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAC7D,EACAM,KAAK,GAAG,CAAC,IAAI5C,aAAa,CAAC4C,KAAK,CAAC,KAAK,EAAE,IAAI,SAAS;QAAA,GAL7CA,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEL7C,OAAA;QAAKwC,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAEpCF,eAAe,CAACa,OAAO,CAACH,GAAG,CAAC,CAACpB,MAAM,EAAEsB,KAAK,kBACzCnD,OAAA;UAEE8C,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACC,MAAM,CAAE;UACzCW,SAAS,EAAC,uEAAuE;UAAAC,QAAA,EAEhFZ;QAAM,GAJFsB,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKJ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN7C,OAAA;MAAKwC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BzC,OAAA;QAAAyC,QAAA,GAAG,aAAW,EAAChC,QAAQ,EAAC,GAAC;MAAA;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC5BtC,aAAa,CAAC8C,KAAK,CAACpB,IAAI,IAAIA,IAAI,KAAK,EAAE,CAAC,iBACvCjC,OAAA;QACE8C,OAAO,EAAEV,kBAAmB;QAC5BI,SAAS,EAAC,mEAAmE;QAAAC,QAAA,EAC9E;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3C,EAAA,CA3IID,GAAG;AAAAqD,EAAA,GAAHrD,GAAG;AA6IT,eAAeA,GAAG;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}