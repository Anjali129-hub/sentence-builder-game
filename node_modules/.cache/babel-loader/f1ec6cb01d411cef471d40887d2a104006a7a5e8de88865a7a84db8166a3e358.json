{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\components\\\\QuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionCard = ({\n  question,\n  onAnswer\n}) => {\n  _s();\n  const [selectedWords, setSelectedWords] = useState([]);\n  const handleWordClick = word => {\n    if (selectedWords.includes(word)) {\n      // Deselect the word\n      setSelectedWords(selectedWords.filter(w => w !== word));\n    } else if (selectedWords.length < question.correctAnswer.length) {\n      // Add the word to next blank\n      setSelectedWords([...selectedWords, word]);\n    }\n  };\n  const renderSentence = () => {\n    const parts = question.question.split('_____________');\n    return parts.map((part, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-lg\",\n      children: [part, index < question.correctAnswer.length && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mx-1 font-semibold underline text-blue-600\",\n        children: selectedWords[index] || '_____'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this));\n  };\n  const handleSubmit = () => {\n    const isCorrect = JSON.stringify(selectedWords) === JSON.stringify(question.correctAnswer);\n    onAnswer(isCorrect);\n    setSelectedWords([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 text-lg leading-8\",\n      children: renderSentence()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap justify-center gap-4 mb-6\",\n      children: question.options.map((word, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWordClick(word),\n        className: `px-4 py-2 rounded-full border text-sm md:text-base transition-all duration-200 ${selectedWords.includes(word) ? 'bg-blue-600 text-white' : 'bg-gray-200 hover:bg-blue-300'}`,\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: selectedWords.length !== question.correctAnswer.length,\n      className: \"px-6 py-2 bg-green-500 text-white rounded-full hover:bg-green-600 disabled:opacity-50\",\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionCard, \"eEDjz7dc3UBCEYRpSYFGbMTiebs=\");\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionCard","question","onAnswer","_s","selectedWords","setSelectedWords","handleWordClick","word","includes","filter","w","length","correctAnswer","renderSentence","parts","split","map","part","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","isCorrect","JSON","stringify","options","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/components/QuestionCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst QuestionCard = ({ question, onAnswer }) => {\r\n  const [selectedWords, setSelectedWords] = useState([]);\r\n\r\n  const handleWordClick = (word) => {\r\n    if (selectedWords.includes(word)) {\r\n      // Deselect the word\r\n      setSelectedWords(selectedWords.filter((w) => w !== word));\r\n    } else if (selectedWords.length < question.correctAnswer.length) {\r\n      // Add the word to next blank\r\n      setSelectedWords([...selectedWords, word]);\r\n    }\r\n  };\r\n\r\n  const renderSentence = () => {\r\n    const parts = question.question.split('_____________');\r\n    return parts.map((part, index) => (\r\n      <span key={index} className=\"text-lg\">\r\n        {part}\r\n        {index < question.correctAnswer.length && (\r\n          <span className=\"mx-1 font-semibold underline text-blue-600\">\r\n            {selectedWords[index] || '_____'}\r\n          </span>\r\n        )}\r\n      </span>\r\n    ));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const isCorrect = JSON.stringify(selectedWords) === JSON.stringify(question.correctAnswer);\r\n    onAnswer(isCorrect);\r\n    setSelectedWords([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      {/* Sentence with blanks */}\r\n      <div className=\"mb-6 text-lg leading-8\">{renderSentence()}</div>\r\n\r\n      {/* Word option buttons */}\r\n      <div className=\"flex flex-wrap justify-center gap-4 mb-6\">\r\n        {question.options.map((word, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => handleWordClick(word)}\r\n            className={`px-4 py-2 rounded-full border text-sm md:text-base transition-all duration-200 ${\r\n              selectedWords.includes(word)\r\n                ? 'bg-blue-600 text-white'\r\n                : 'bg-gray-200 hover:bg-blue-300'\r\n            }`}\r\n          >\r\n            {word}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Submit Button */}\r\n      <button\r\n        onClick={handleSubmit}\r\n        disabled={selectedWords.length !== question.correctAnswer.length}\r\n        className=\"px-6 py-2 bg-green-500 text-white rounded-full hover:bg-green-600 disabled:opacity-50\"\r\n      >\r\n        Submit Answer\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionCard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}