{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchQuestions } from './data/api'; // This should be correct if api.js is in the 'src/data' folder\nimport QuestionCard from './components/QuestionCard'; // Make sure this component is correctly defined\nimport ScoreScreen from './components/ScoreScreen'; // Same as above\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds timer\n\n  useEffect(() => {\n    fetchQuestions().then(data => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      setGameOver(true);\n    } else {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer); // Clear the timer when component unmounts or game ends\n    }\n  }, [timeLeft]);\n  const handleAnswer = isCorrect => {\n    if (isCorrect) setScore(prevScore => prevScore + 1); // Using functional state update\n    const next = currentIndex + 1;\n    if (next < questions.length) {\n      setCurrentIndex(next);\n    } else {\n      setGameOver(true);\n    }\n  };\n  const handleRestart = () => {\n    setScore(0);\n    setCurrentIndex(0);\n    setGameOver(false);\n    setTimeLeft(30); // Reset time\n    setLoading(true); // Reset loading\n    fetchQuestions().then(data => {\n      setQuestions(data);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-6\",\n      children: \"Sentence Construction Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : gameOver ? /*#__PURE__*/_jsxDEV(ScoreScreen, {\n      score: score,\n      total: questions.length,\n      onRestart: handleRestart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : questions.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-xl mb-4 font-semibold text-red-500\",\n        children: [\"Time Left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(QuestionCard, {\n        question: questions[currentIndex],\n        onAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uTMKNVzxdwG4iEOS0WsF8GciioQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchQuestions","QuestionCard","ScoreScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","gameOver","setGameOver","loading","setLoading","timeLeft","setTimeLeft","then","data","timer","setInterval","prev","clearInterval","handleAnswer","isCorrect","prevScore","next","length","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","total","onRestart","question","onAnswer","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchQuestions } from './data/api'; // This should be correct if api.js is in the 'src/data' folder\r\nimport QuestionCard from './components/QuestionCard'; // Make sure this component is correctly defined\r\nimport ScoreScreen from './components/ScoreScreen'; // Same as above\r\n\r\nfunction App() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [timeLeft, setTimeLeft] = useState(30); // 30 seconds timer\r\n\r\n  useEffect(() => {\r\n    fetchQuestions().then((data) => {\r\n      setQuestions(data);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      setGameOver(true);\r\n    } else {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n      return () => clearInterval(timer); // Clear the timer when component unmounts or game ends\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  const handleAnswer = (isCorrect) => {\r\n    if (isCorrect) setScore((prevScore) => prevScore + 1); // Using functional state update\r\n    const next = currentIndex + 1;\r\n    if (next < questions.length) {\r\n      setCurrentIndex(next);\r\n    } else {\r\n      setGameOver(true);\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setScore(0);\r\n    setCurrentIndex(0);\r\n    setGameOver(false);\r\n    setTimeLeft(30); // Reset time\r\n    setLoading(true); // Reset loading\r\n    fetchQuestions().then((data) => {\r\n      setQuestions(data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 p-6\">\r\n      <h1 className=\"text-3xl font-bold text-center mb-6\">Sentence Construction Game</h1>\r\n      {loading ? (\r\n        <div className=\"text-center\">Loading...</div>\r\n      ) : gameOver ? (\r\n        <ScoreScreen score={score} total={questions.length} onRestart={handleRestart} />\r\n      ) : (\r\n        questions.length > 0 && (\r\n          <>\r\n            <div className=\"text-center text-xl mb-4 font-semibold text-red-500\">Time Left: {timeLeft}s</div>\r\n            <QuestionCard\r\n              question={questions[currentIndex]}\r\n              onAnswer={handleAnswer}\r\n            />\r\n          </>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}