{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\components\\\\GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = ({\n  questions,\n  setShowFeedback,\n  setUserAnswers\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [selectedWords, setSelectedWords] = useState([]);\n  const [answerSubmitted, setAnswerSubmitted] = useState(false);\n  const [answers, setAnswers] = useState([]);\n\n  // Ensure questions is not empty before accessing\n  if (!questions || questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this); // Or handle error if data is missing\n  }\n  const currentQuestion = questions[currentIndex];\n  const handleWordClick = word => {\n    if (!answerSubmitted && selectedWords.length < currentQuestion.correctAnswer.length) {\n      setSelectedWords([...selectedWords, word]);\n    }\n  };\n  const handleSubmit = () => {\n    const correct = JSON.stringify(selectedWords) === JSON.stringify(currentQuestion.correctAnswer);\n    const answerRecord = {\n      questionId: currentQuestion.questionId,\n      selected: selectedWords,\n      correct: correct\n    };\n    setAnswers(prev => [...prev, answerRecord]);\n    setAnswerSubmitted(true);\n  };\n  const handleNext = () => {\n    if (currentIndex + 1 < questions.length) {\n      setCurrentIndex(prev => prev + 1);\n      setSelectedWords([]);\n      setAnswerSubmitted(false);\n    } else {\n      setUserAnswers(answers);\n      setShowFeedback(true);\n    }\n  };\n  const handleUnselect = word => {\n    if (!answerSubmitted) {\n      setSelectedWords(selectedWords.filter(w => w !== word));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded shadow-md w-full max-w-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: [\"Question \", currentIndex + 1, \" of \", questions.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-4\",\n      children: currentQuestion.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: selectedWords.map((word, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleUnselect(word),\n        className: \"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded mr-2 mb-2 cursor-pointer\",\n        children: word\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4 mb-4\",\n      children: currentQuestion.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleWordClick(option),\n        disabled: selectedWords.includes(option),\n        className: `py-2 px-4 rounded border ${selectedWords.includes(option) ? \"bg-blue-500 text-white\" : \"bg-gray-200\"}`,\n        children: option\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), !answerSubmitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\",\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      className: \"bg-green-600 text-white py-2 px-4 rounded hover:bg-green-700\",\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"FCQTKZjNBwySY/gEclDMQnLsZj4=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Game","questions","setShowFeedback","setUserAnswers","_s","currentIndex","setCurrentIndex","selectedWords","setSelectedWords","answerSubmitted","setAnswerSubmitted","answers","setAnswers","length","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","handleWordClick","word","correctAnswer","handleSubmit","correct","JSON","stringify","answerRecord","questionId","selected","prev","handleNext","handleUnselect","filter","w","className","question","map","idx","onClick","options","option","disabled","includes","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/components/GamePage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Game = ({ questions, setShowFeedback, setUserAnswers }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [selectedWords, setSelectedWords] = useState([]);\r\n  const [answerSubmitted, setAnswerSubmitted] = useState(false);\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  // Ensure questions is not empty before accessing\r\n  if (!questions || questions.length === 0) {\r\n    return <p>Loading questions...</p>; // Or handle error if data is missing\r\n  }\r\n\r\n  const currentQuestion = questions[currentIndex];\r\n\r\n  const handleWordClick = (word) => {\r\n    if (!answerSubmitted && selectedWords.length < currentQuestion.correctAnswer.length) {\r\n      setSelectedWords([...selectedWords, word]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const correct =\r\n      JSON.stringify(selectedWords) === JSON.stringify(currentQuestion.correctAnswer);\r\n    const answerRecord = {\r\n      questionId: currentQuestion.questionId,\r\n      selected: selectedWords,\r\n      correct: correct,\r\n    };\r\n\r\n    setAnswers((prev) => [...prev, answerRecord]);\r\n    setAnswerSubmitted(true);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentIndex + 1 < questions.length) {\r\n      setCurrentIndex((prev) => prev + 1);\r\n      setSelectedWords([]);\r\n      setAnswerSubmitted(false);\r\n    } else {\r\n      setUserAnswers(answers);\r\n      setShowFeedback(true);\r\n    }\r\n  };\r\n\r\n  const handleUnselect = (word) => {\r\n    if (!answerSubmitted) {\r\n      setSelectedWords(selectedWords.filter((w) => w !== word));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white p-6 rounded shadow-md w-full max-w-2xl\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">\r\n        Question {currentIndex + 1} of {questions.length}\r\n      </h2>\r\n      <p className=\"mb-4\">{currentQuestion.question}</p>\r\n\r\n      <div className=\"mb-4\">\r\n        {selectedWords.map((word, idx) => (\r\n          <span\r\n            key={idx}\r\n            onClick={() => handleUnselect(word)}\r\n            className=\"inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded mr-2 mb-2 cursor-pointer\"\r\n          >\r\n            {word}\r\n          </span>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n        {currentQuestion.options.map((option, idx) => (\r\n          <button\r\n            key={idx}\r\n            onClick={() => handleWordClick(option)}\r\n            disabled={selectedWords.includes(option)}\r\n            className={`py-2 px-4 rounded border ${\r\n              selectedWords.includes(option) ? \"bg-blue-500 text-white\" : \"bg-gray-200\"\r\n            }`}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {!answerSubmitted ? (\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\"\r\n        >\r\n          Submit Answer\r\n        </button>\r\n      ) : (\r\n        <button\r\n          onClick={handleNext}\r\n          className=\"bg-green-600 text-white py-2 px-4 rounded hover:bg-green-700\"\r\n        >\r\n          Next Question\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,SAAS;EAAEC,eAAe;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,IAAI,CAACI,SAAS,IAAIA,SAAS,CAACY,MAAM,KAAK,CAAC,EAAE;IACxC,oBAAOd,OAAA;MAAAe,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EACtC;EAEA,MAAMC,eAAe,GAAGlB,SAAS,CAACI,YAAY,CAAC;EAE/C,MAAMe,eAAe,GAAIC,IAAI,IAAK;IAChC,IAAI,CAACZ,eAAe,IAAIF,aAAa,CAACM,MAAM,GAAGM,eAAe,CAACG,aAAa,CAACT,MAAM,EAAE;MACnFL,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEc,IAAI,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GACXC,IAAI,CAACC,SAAS,CAACnB,aAAa,CAAC,KAAKkB,IAAI,CAACC,SAAS,CAACP,eAAe,CAACG,aAAa,CAAC;IACjF,MAAMK,YAAY,GAAG;MACnBC,UAAU,EAAET,eAAe,CAACS,UAAU;MACtCC,QAAQ,EAAEtB,aAAa;MACvBiB,OAAO,EAAEA;IACX,CAAC;IAEDZ,UAAU,CAAEkB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,YAAY,CAAC,CAAC;IAC7CjB,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMqB,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI1B,YAAY,GAAG,CAAC,GAAGJ,SAAS,CAACY,MAAM,EAAE;MACvCP,eAAe,CAAEwB,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MACnCtB,gBAAgB,CAAC,EAAE,CAAC;MACpBE,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,MAAM;MACLP,cAAc,CAACQ,OAAO,CAAC;MACvBT,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAED,MAAM8B,cAAc,GAAIX,IAAI,IAAK;IAC/B,IAAI,CAACZ,eAAe,EAAE;MACpBD,gBAAgB,CAACD,aAAa,CAAC0B,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKb,IAAI,CAAC,CAAC;IAC3D;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKoC,SAAS,EAAC,iDAAiD;IAAArB,QAAA,gBAC9Df,OAAA;MAAIoC,SAAS,EAAC,4BAA4B;MAAArB,QAAA,GAAC,WAChC,EAACT,YAAY,GAAG,CAAC,EAAC,MAAI,EAACJ,SAAS,CAACY,MAAM;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACLnB,OAAA;MAAGoC,SAAS,EAAC,MAAM;MAAArB,QAAA,EAAEK,eAAe,CAACiB;IAAQ;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElDnB,OAAA;MAAKoC,SAAS,EAAC,MAAM;MAAArB,QAAA,EAClBP,aAAa,CAAC8B,GAAG,CAAC,CAAChB,IAAI,EAAEiB,GAAG,kBAC3BvC,OAAA;QAEEwC,OAAO,EAAEA,CAAA,KAAMP,cAAc,CAACX,IAAI,CAAE;QACpCc,SAAS,EAAC,mFAAmF;QAAArB,QAAA,EAE5FO;MAAI,GAJAiB,GAAG;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENnB,OAAA;MAAKoC,SAAS,EAAC,6BAA6B;MAAArB,QAAA,EACzCK,eAAe,CAACqB,OAAO,CAACH,GAAG,CAAC,CAACI,MAAM,EAAEH,GAAG,kBACvCvC,OAAA;QAEEwC,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACqB,MAAM,CAAE;QACvCC,QAAQ,EAAEnC,aAAa,CAACoC,QAAQ,CAACF,MAAM,CAAE;QACzCN,SAAS,EAAE,4BACT5B,aAAa,CAACoC,QAAQ,CAACF,MAAM,CAAC,GAAG,wBAAwB,GAAG,aAAa,EACxE;QAAA3B,QAAA,EAEF2B;MAAM,GAPFH,GAAG;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQF,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAEL,CAACT,eAAe,gBACfV,OAAA;MACEwC,OAAO,EAAEhB,YAAa;MACtBY,SAAS,EAAC,4DAA4D;MAAArB,QAAA,EACvE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETnB,OAAA;MACEwC,OAAO,EAAER,UAAW;MACpBI,SAAS,EAAC,8DAA8D;MAAArB,QAAA,EACzE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CApGIJ,IAAI;AAAA4C,EAAA,GAAJ5C,IAAI;AAsGV,eAAeA,IAAI;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}