{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\components\\\\QuestionCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionCard({\n  question,\n  onAnswer\n}) {\n  _s();\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const handleSelectAnswer = word => {\n    setSelectedAnswer(word);\n  };\n  const handleSubmit = () => {\n    const isCorrect = question.correctAnswer.includes(selectedAnswer);\n    onAnswer(isCorrect); // Notify parent if the answer is correct\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg font-medium mb-4\",\n      children: question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2 mb-4\",\n      children: question.options.map((word, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 rounded-md border ${selectedAnswer === word ? 'bg-green-300' : 'bg-gray-200'}`,\n        onClick: () => handleSelectAnswer(word),\n        children: word\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mt-4 px-6 py-2 bg-blue-500 text-white rounded-full\",\n      onClick: handleSubmit,\n      disabled: !selectedAnswer,\n      children: \"Submit Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionCard, \"PzLy16irkb6MWo7B4jX8+cvoSO4=\");\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionCard","question","onAnswer","_s","selectedAnswer","setSelectedAnswer","handleSelectAnswer","word","handleSubmit","isCorrect","correctAnswer","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","map","idx","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/components/QuestionCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction QuestionCard({ question, onAnswer }) {\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n\r\n  const handleSelectAnswer = (word) => {\r\n    setSelectedAnswer(word);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const isCorrect = question.correctAnswer.includes(selectedAnswer);\r\n    onAnswer(isCorrect); // Notify parent if the answer is correct\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <p className=\"text-lg font-medium mb-4\">{question.question}</p>\r\n      <div className=\"flex flex-wrap gap-2 mb-4\">\r\n        {question.options.map((word, idx) => (\r\n          <button\r\n            key={idx}\r\n            className={`px-4 py-2 rounded-md border ${selectedAnswer === word ? 'bg-green-300' : 'bg-gray-200'}`}\r\n            onClick={() => handleSelectAnswer(word)}\r\n          >\r\n            {word}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button\r\n        className=\"mt-4 px-6 py-2 bg-blue-500 text-white rounded-full\"\r\n        onClick={handleSubmit}\r\n        disabled={!selectedAnswer}\r\n      >\r\n        Submit Answer\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuestionCard;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMS,kBAAkB,GAAIC,IAAI,IAAK;IACnCF,iBAAiB,CAACE,IAAI,CAAC;EACzB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAGR,QAAQ,CAACS,aAAa,CAACC,QAAQ,CAACP,cAAc,CAAC;IACjEF,QAAQ,CAACO,SAAS,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACEV,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBd,OAAA;MAAGa,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAEZ,QAAQ,CAACA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/DlB,OAAA;MAAKa,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACvCZ,QAAQ,CAACiB,OAAO,CAACC,GAAG,CAAC,CAACZ,IAAI,EAAEa,GAAG,kBAC9BrB,OAAA;QAEEa,SAAS,EAAE,+BAA+BR,cAAc,KAAKG,IAAI,GAAG,cAAc,GAAG,aAAa,EAAG;QACrGc,OAAO,EAAEA,CAAA,KAAMf,kBAAkB,CAACC,IAAI,CAAE;QAAAM,QAAA,EAEvCN;MAAI,GAJAa,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKF,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNlB,OAAA;MACEa,SAAS,EAAC,oDAAoD;MAC9DS,OAAO,EAAEb,YAAa;MACtBc,QAAQ,EAAE,CAAClB,cAAe;MAAAS,QAAA,EAC3B;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACd,EAAA,CAnCQH,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAqCrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}