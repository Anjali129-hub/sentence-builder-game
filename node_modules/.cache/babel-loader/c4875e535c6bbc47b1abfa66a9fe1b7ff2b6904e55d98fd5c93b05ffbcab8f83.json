{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anjal\\\\OneDrive\\\\Desktop\\\\sentence-builder-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SentenceGame() {\n  _s();\n  var _questions$currentQue, _questions$currentQue2;\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [timer, setTimer] = useState(30); // 30 seconds timer\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [feedback, setFeedback] = useState([]);\n  const [isNextEnabled, setIsNextEnabled] = useState(false);\n\n  // Fetch questions\n  const fetchQuestions = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/questions');\n      setQuestions(response.data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n  useEffect(() => {\n    fetchQuestions();\n  }, []);\n\n  // Timer Logic\n  useEffect(() => {\n    if (timer === 0) {\n      handleNext(); // Move to next question when time is up\n    }\n    const interval = setInterval(() => {\n      if (timer > 0) setTimer(prevTimer => prevTimer - 1);\n    }, 1000);\n    return () => clearInterval(interval); // Cleanup timer on component unmount\n  }, [timer]);\n  const handleSelectAnswer = (answer, blankIndex) => {\n    const newAnswers = [...selectedAnswers];\n    newAnswers[blankIndex] = answer;\n    setSelectedAnswers(newAnswers);\n\n    // Enable \"Next\" button only when all blanks are filled\n    setIsNextEnabled(newAnswers.every(answer => answer !== null));\n  };\n  const handleUnselectAnswer = blankIndex => {\n    const newAnswers = [...selectedAnswers];\n    newAnswers[blankIndex] = null;\n    setSelectedAnswers(newAnswers);\n    setIsNextEnabled(false); // Disable \"Next\" button when unselecting an answer\n  };\n  const handleNext = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    let newScore = score;\n\n    // Check if answers are correct for this question\n    currentQuestion.correctAnswer.forEach((correct, index) => {\n      if (selectedAnswers[index] === correct) {\n        newScore += 1;\n      }\n    });\n    setScore(newScore);\n    setFeedback(prevFeedback => [...prevFeedback, {\n      questionId: currentQuestion.questionId,\n      correctAnswers: currentQuestion.correctAnswer,\n      selectedAnswers\n    }]);\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setSelectedAnswers(Array(currentQuestion.options.length).fill(null));\n      setTimer(30); // Reset timer\n    } else {\n      setIsGameOver(true);\n    }\n  };\n  if (isGameOver) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your final score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Feedback:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), feedback.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Question \", item.questionId, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), item.selectedAnswers.map((answer, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Your answer: \", answer, \" (Correct answer: \", item.correctAnswers[idx], \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: (_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time left: \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (_questions$currentQue2 = questions[currentQuestionIndex]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSelectAnswer(option, idx),\n        disabled: selectedAnswers[idx] !== null,\n        className: \"option-btn\",\n        children: option\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), selectedAnswers.some(answer => answer !== null) && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      disabled: !isNextEnabled,\n      className: \"next-btn\",\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(SentenceGame, \"vDIyAfbVKl9CKFzaBAJ6aIZDt+Y=\");\n_c = SentenceGame;\nexport default SentenceGame;\nvar _c;\n$RefreshReg$(_c, \"SentenceGame\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SentenceGame","_s","_questions$currentQue","_questions$currentQue2","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","score","setScore","timer","setTimer","isGameOver","setIsGameOver","feedback","setFeedback","isNextEnabled","setIsNextEnabled","fetchQuestions","response","get","data","error","console","handleNext","interval","setInterval","prevTimer","clearInterval","handleSelectAnswer","answer","blankIndex","newAnswers","every","handleUnselectAnswer","currentQuestion","newScore","correctAnswer","forEach","correct","index","prevFeedback","questionId","correctAnswers","length","Array","options","fill","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","idx","question","option","onClick","disabled","className","some","_c","$RefreshReg$"],"sources":["C:/Users/anjal/OneDrive/Desktop/sentence-builder-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction SentenceGame() {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [score, setScore] = useState(0);\r\n  const [timer, setTimer] = useState(30);  // 30 seconds timer\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [feedback, setFeedback] = useState([]);\r\n  const [isNextEnabled, setIsNextEnabled] = useState(false);\r\n\r\n  // Fetch questions\r\n  const fetchQuestions = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/questions');\r\n      setQuestions(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching questions:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  // Timer Logic\r\n  useEffect(() => {\r\n    if (timer === 0) {\r\n      handleNext();  // Move to next question when time is up\r\n    }\r\n    const interval = setInterval(() => {\r\n      if (timer > 0) setTimer((prevTimer) => prevTimer - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval); // Cleanup timer on component unmount\r\n  }, [timer]);\r\n\r\n  const handleSelectAnswer = (answer, blankIndex) => {\r\n    const newAnswers = [...selectedAnswers];\r\n    newAnswers[blankIndex] = answer;\r\n    setSelectedAnswers(newAnswers);\r\n\r\n    // Enable \"Next\" button only when all blanks are filled\r\n    setIsNextEnabled(newAnswers.every((answer) => answer !== null));\r\n  };\r\n\r\n  const handleUnselectAnswer = (blankIndex) => {\r\n    const newAnswers = [...selectedAnswers];\r\n    newAnswers[blankIndex] = null;\r\n    setSelectedAnswers(newAnswers);\r\n    setIsNextEnabled(false);  // Disable \"Next\" button when unselecting an answer\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const currentQuestion = questions[currentQuestionIndex];\r\n    let newScore = score;\r\n\r\n    // Check if answers are correct for this question\r\n    currentQuestion.correctAnswer.forEach((correct, index) => {\r\n      if (selectedAnswers[index] === correct) {\r\n        newScore += 1;\r\n      }\r\n    });\r\n\r\n    setScore(newScore);\r\n    setFeedback((prevFeedback) => [\r\n      ...prevFeedback,\r\n      {\r\n        questionId: currentQuestion.questionId,\r\n        correctAnswers: currentQuestion.correctAnswer,\r\n        selectedAnswers,\r\n      },\r\n    ]);\r\n\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setSelectedAnswers(Array(currentQuestion.options.length).fill(null));\r\n      setTimer(30);  // Reset timer\r\n    } else {\r\n      setIsGameOver(true);\r\n    }\r\n  };\r\n\r\n  if (isGameOver) {\r\n    return (\r\n      <div>\r\n        <h2>Game Over!</h2>\r\n        <p>Your final score: {score} / {questions.length}</p>\r\n        <h3>Feedback:</h3>\r\n        {feedback.map((item, idx) => (\r\n          <div key={idx}>\r\n            <p>Question {item.questionId}:</p>\r\n            {item.selectedAnswers.map((answer, idx) => (\r\n              <div key={idx}>\r\n                <span>\r\n                  Your answer: {answer} (Correct answer: {item.correctAnswers[idx]})\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{questions[currentQuestionIndex]?.question}</h2>\r\n      <p>Time left: {timer}s</p>\r\n      <div>\r\n        {questions[currentQuestionIndex]?.options.map((option, idx) => (\r\n          <button\r\n            key={idx}\r\n            onClick={() => handleSelectAnswer(option, idx)}\r\n            disabled={selectedAnswers[idx] !== null}\r\n            className=\"option-btn\"\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {selectedAnswers.some((answer) => answer !== null) && (\r\n        <button\r\n          onClick={handleNext}\r\n          disabled={!isNextEnabled}\r\n          className=\"next-btn\"\r\n        >\r\n          Next\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SentenceGame;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}